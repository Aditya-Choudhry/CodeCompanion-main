{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"@angular/common\";\nfunction EmployeeModalComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"div\", 15)(3, \"label\", 16);\n    i0.ɵɵtext(4, \"Employee ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 17);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 15)(8, \"label\", 16);\n    i0.ɵɵtext(9, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 17);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 15)(13, \"label\", 16);\n    i0.ɵɵtext(14, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\", 17);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 14)(18, \"div\", 15)(19, \"label\", 16);\n    i0.ɵɵtext(20, \"Position:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p\", 17);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 15)(24, \"label\", 16);\n    i0.ɵɵtext(25, \"Salary:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"p\", 17);\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"currency\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 15)(30, \"label\", 16);\n    i0.ɵɵtext(31, \"Department:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"p\", 17);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.employee.id);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.employee.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.employee.email);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.employee.position);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 7, ctx_r0.employee.salary));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.employee.department.name, \" (\", ctx_r0.employee.department.location, \")\");\n  }\n}\nfunction EmployeeModalComponent_form_10_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", dept_r3.name, \" - \", dept_r3.location, \" \");\n  }\n}\nfunction EmployeeModalComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 18);\n    i0.ɵɵlistener(\"ngSubmit\", function EmployeeModalComponent_form_10_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"div\", 14)(3, \"div\", 15)(4, \"label\", 19);\n    i0.ɵɵtext(5, \"Name *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 20);\n    i0.ɵɵelementStart(7, \"div\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 15)(10, \"label\", 22);\n    i0.ɵɵtext(11, \"Email *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 23);\n    i0.ɵɵelementStart(13, \"div\", 21);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 15)(16, \"label\", 24);\n    i0.ɵɵtext(17, \"Position *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 25);\n    i0.ɵɵelementStart(19, \"div\", 21);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 14)(22, \"div\", 15)(23, \"label\", 26);\n    i0.ɵɵtext(24, \"Salary *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 27);\n    i0.ɵɵelementStart(26, \"div\", 21);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 15)(29, \"label\", 28);\n    i0.ɵɵtext(30, \"Department *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"select\", 29)(32, \"option\", 30);\n    i0.ɵɵtext(33, \"Select a department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(34, EmployeeModalComponent_form_10_option_34_Template, 2, 3, \"option\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 21);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.employeeForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isFieldInvalid(\"name\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFieldError(\"name\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isFieldInvalid(\"email\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFieldError(\"email\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isFieldInvalid(\"position\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFieldError(\"position\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isFieldInvalid(\"salary\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFieldError(\"salary\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isFieldInvalid(\"departmentId\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.departments);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getFieldError(\"departmentId\"));\n  }\n}\nfunction EmployeeModalComponent_button_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35);\n  }\n}\nfunction EmployeeModalComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function EmployeeModalComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵtemplate(1, EmployeeModalComponent_button_14_span_1_Template, 1, 0, \"span\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.employeeForm.invalid || ctx_r0.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitting);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.isSubmitting ? \"Saving...\" : ctx_r0.isEditMode ? \"Update Employee\" : \"Create Employee\", \" \");\n  }\n}\nexport let EmployeeModalComponent = /*#__PURE__*/(() => {\n  class EmployeeModalComponent {\n    constructor(fb, employeeService) {\n      this.fb = fb;\n      this.employeeService = employeeService;\n      this.employee = null;\n      this.departments = [];\n      this.isEditMode = false;\n      this.close = new EventEmitter();\n      this.employeeSaved = new EventEmitter();\n      this.isSubmitting = false;\n      this.employeeForm = this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        position: ['', [Validators.required, Validators.minLength(2)]],\n        salary: ['', [Validators.required, Validators.min(0)]],\n        departmentId: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      if (this.employee && this.isEditMode) {\n        this.employeeForm.patchValue({\n          name: this.employee.name,\n          email: this.employee.email,\n          position: this.employee.position,\n          salary: this.employee.salary,\n          departmentId: this.employee.departmentId\n        });\n      }\n    }\n    get isViewMode() {\n      return !this.isEditMode && this.employee !== null;\n    }\n    get isCreateMode() {\n      return !this.isEditMode && this.employee === null;\n    }\n    get modalTitle() {\n      if (this.isViewMode) return 'Employee Details';\n      if (this.isEditMode) return 'Edit Employee';\n      return 'Add New Employee';\n    }\n    onSubmit() {\n      if (this.employeeForm.valid && !this.isViewMode) {\n        this.isSubmitting = true;\n        const formData = this.employeeForm.value;\n        const operation = this.isEditMode && this.employee ? this.employeeService.updateEmployee(this.employee.id, formData) : this.employeeService.createEmployee(formData);\n        operation.subscribe({\n          next: () => {\n            this.isSubmitting = false;\n            this.employeeSaved.emit();\n            alert(this.isEditMode ? 'Employee updated successfully!' : 'Employee created successfully!');\n          },\n          error: error => {\n            console.error('Error saving employee:', error);\n            this.isSubmitting = false;\n            alert('Error saving employee!');\n          }\n        });\n      }\n    }\n    onClose() {\n      this.close.emit();\n    }\n    getDepartmentName(departmentId) {\n      const dept = this.departments.find(d => d.id === departmentId);\n      return dept ? dept.name : 'Unknown';\n    }\n    // Form validation helpers\n    isFieldInvalid(fieldName) {\n      const field = this.employeeForm.get(fieldName);\n      return !!(field && field.invalid && (field.dirty || field.touched));\n    }\n    getFieldError(fieldName) {\n      const field = this.employeeForm.get(fieldName);\n      if (field?.errors) {\n        if (field.errors['required']) return `${fieldName} is required`;\n        if (field.errors['email']) return 'Invalid email address';\n        if (field.errors['minlength']) return `${fieldName} is too short`;\n        if (field.errors['min']) return `${fieldName} must be positive`;\n      }\n      return '';\n    }\n    static {\n      this.ɵfac = function EmployeeModalComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || EmployeeModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: EmployeeModalComponent,\n        selectors: [[\"app-employee-modal\"]],\n        inputs: {\n          employee: \"employee\",\n          departments: \"departments\",\n          isEditMode: \"isEditMode\"\n        },\n        outputs: {\n          close: \"close\",\n          employeeSaved: \"employeeSaved\"\n        },\n        decls: 15,\n        vars: 5,\n        consts: [[1, \"modal-backdrop\", \"fade\", \"show\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\", \"show\", \"d-block\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"mb-3\"], [1, \"form-label\", \"fw-bold\"], [1, \"form-control-plaintext\"], [3, \"ngSubmit\", \"formGroup\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter employee name\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter email address\", 1, \"form-control\"], [\"for\", \"position\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"position\", \"formControlName\", \"position\", \"placeholder\", \"Enter job position\", 1, \"form-control\"], [\"for\", \"salary\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"salary\", \"formControlName\", \"salary\", \"placeholder\", \"Enter salary amount\", 1, \"form-control\"], [\"for\", \"departmentId\", 1, \"form-label\"], [\"id\", \"departmentId\", \"formControlName\", \"departmentId\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", \"role\", \"status\", 4, \"ngIf\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\"]],\n        template: function EmployeeModalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"div\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function EmployeeModalComponent_Template_button_click_7_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 7);\n            i0.ɵɵtemplate(9, EmployeeModalComponent_div_9_Template, 34, 9, \"div\", 8)(10, EmployeeModalComponent_form_10_Template, 37, 17, \"form\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"div\", 10)(12, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function EmployeeModalComponent_Template_button_click_12_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵtext(13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, EmployeeModalComponent_button_14_Template, 3, 3, \"button\", 12);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(ctx.modalTitle);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.isViewMode && ctx.employee);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isViewMode);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isViewMode ? \"Close\" : \"Cancel\", \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isViewMode);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.CurrencyPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".modal-backdrop[_ngcontent-%COMP%]{background-color:#00000080}.modal[_ngcontent-%COMP%]{display:block}.form-control-plaintext[_ngcontent-%COMP%]{border-bottom:1px solid #dee2e6;padding-bottom:.375rem;margin-bottom:0}.modal-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid #dee2e6}.modal-footer[_ngcontent-%COMP%]{background-color:#f8f9fa;border-top:1px solid #dee2e6}.spinner-border-sm[_ngcontent-%COMP%]{width:1rem;height:1rem;margin-right:.5rem}.fw-bold[_ngcontent-%COMP%]{font-weight:600!important}.btn-close[_ngcontent-%COMP%]{background:none;border:none;font-size:1.25rem;font-weight:700;line-height:1;color:#000;opacity:.5}.btn-close[_ngcontent-%COMP%]:hover{opacity:.75}\"]\n      });\n    }\n  }\n  return EmployeeModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}